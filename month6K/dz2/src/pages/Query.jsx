import { useQuery } from '@tanstack/react-query';

const fetchPosts = async () => {
    console.log('üîÑ fetchPosts –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è');

  const res = await fetch('https://jsonplaceholder.typicode.com/posts');
  if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö');
  const data = res.json()
  console.log(data);
  
  return data;
};

function Query() {
  const {
    data: posts,
    isLoading,
    isError,
    error,
    refetch
  } = useQuery({
    queryKey: ['posts'],
    queryFn: fetchPosts,
  });

  return (
    <div>
      <h1>–ü–æ—Å—Ç—ã:</h1>
      <button onClick={() => refetch()}>üîÑ –û–±–Ω–æ–≤–∏—Ç—å</button>

      {isLoading && <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>}
      {isError && <p>–û—à–∏–±–∫–∞: {error.message}</p>}

      <ul>
        {posts?.map((post) => (
          <li key={post.id}>{post.title}</li>
        ))}
      </ul>
    </div>
  );
}

export default Query;
